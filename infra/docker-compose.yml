version: '3.3'
services:
  
  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    env_file:
      - ./.env

  backend:
    image: ilgiznigma/foodgram-backend:latest
    restart: always
#    command: >
#      bash -c "python manage.py migrate &&
#      python manage.py collectstatic --noinput &&
#      gunicorn --bind 0:8000 foodgram.wsgi"
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env

  frontend:
    image: ilgiznigma/foodgram-frontend:latest
    volumes:
      - ../frontend/:/app/result_build/
  
  nginx:
    image: nginx:1.19.3
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/redoc.html:/usr/share/nginx/html/api/docs/redoc.html
      - ../docs/openapi-schema.yml:/usr/share/nginx/html/api/docs/openapi-schema.yml
      - static_value:/var/html/static/
      - media_value:/var/html/media/
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - backend
      - frontend

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
  static_value:
  media_value:
